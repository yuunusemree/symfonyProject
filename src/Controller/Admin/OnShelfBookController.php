<?php

namespace App\Controller\Admin;

use App\Entity\Admin\OnShelfBook;
use App\Form\Admin\OnShelfBookType;
use App\Repository\Admin\OnShelfBookRepository;
use App\Repository\BookRepository;
use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
use Symfony\Component\HttpFoundation\File\Exception\FileException;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\HttpFoundation\Response;
use Symfony\Component\Routing\Annotation\Route;
use Symfony\Component\Validator\Constraints\File;

/**
 * @Route("/admin/onshelfbook")
 */
class OnShelfBookController extends AbstractController
{
    /**
     * @Route("/", name="admin_onshelfbook_index", methods={"GET"})
     */
    public function index(OnShelfBookRepository $onShelfBookRepository): Response
    {
        return $this->render('admin/onshelfbook/index.html.twig', [
            'onshelfbooks' => $onShelfBookRepository->findAll(),
        ]);
    }

    /**
     * @Route("/new/{id}", name="admin_onshelfbook_new", methods={"GET","POST"})
     */
    public function new(Request $request, $id, BookRepository $bookRepository, OnShelfBookRepository $onShelfBookRepository): Response
    {
        $onShelfBooks = $onShelfBookRepository->findBy(['bookid'=>$id]);
        $book = $bookRepository->findOneBy(['id'=>$id]);
        $onShelfBook = new OnShelfBook();
        $form = $this->createForm(OnShelfBookType::class, $onShelfBook);
        $form->handleRequest($request);

        if ($form->isSubmitted() && $form->isValid()) {
            $entityManager = $this->getDoctrine()->getManager();
            //********file upload**********
            /** @var file $file */
            $file = $form['image']->getData();
            if ($file){
                $fileName = $this->generateUniqueFileName() . '.' . $file->guessExtension();
                try{
                    $file->move(
                        $this->getParameter('images_directory'), //Service.yaml tanımladığımız resim yolu
                        $fileName
                    );
                } catch (FileException $e){
                    // ... handle exception if something happens during file upload
                }
                $onShelfBook->setImage($fileName);
            }
            //********file upload**********
            $onShelfBook->setBookid($id);
            $entityManager->persist($onShelfBook);
            $entityManager->flush();

            return $this->redirectToRoute('admin_onshelfbook_new', ['id'=>$id]);
        }

        return $this->render('admin/onshelfbook/new.html.twig', [
            'onshelfbook' => $onShelfBook,
            'onshelfbooks' => $onShelfBooks,
            'book' => $book,
            'form' => $form->createView(),
        ]);
    }

    /**
     * @return string
     */
    private function generateUniqueFileName()
    {
        // md5() reduces the similarity of the file names generated by
        // uniqid(), which is based on timestamps
        return md5(uniqid());
    }

    /**
     * @Route("/{id}", name="admin_onshelfbook_show", methods={"GET"})
     */
    public function show(OnShelfBook $onShelfBook): Response
    {
        return $this->render('admin/onshelfbook/show.html.twig', [
            'onshelfbook' => $onShelfBook,
        ]);
    }

    /**
     * @Route("/{id}/edit/{bid}", name="admin_onshelfbook_edit", methods={"GET","POST"})
     */
    public function edit(Request $request, $bid, OnShelfBook $onShelfBook): Response
    {
        $form = $this->createForm(OnShelfBookType::class, $onShelfBook);
        $form->handleRequest($request);

        if ($form->isSubmitted() && $form->isValid()) {
            //********file upload**********
            /** @var file $file */
            $file = $form['image']->getData();
            if ($file){
                $fileName = $this->generateUniqueFileName() . '.' . $file->guessExtension();
                try{
                    $file->move(
                        $this->getParameter('images_directory'), //Service.yaml tanımladığımız resim yolu
                        $fileName
                    );
                } catch (FileException $e){
                    // ... handle exception if something happens during file upload
                }
                $onShelfBook->setImage($fileName);
            }
            //********file upload**********
            $this->getDoctrine()->getManager()->flush();

            return $this->redirectToRoute('admin_onshelfbook_new', ['id'=>$bid]);
        }

        return $this->render('admin/onshelfbook/edit.html.twig', [
            'onshelfbook' => $onShelfBook,
            'form' => $form->createView(),
        ]);
    }

    /**
     * @Route("/{id}/{bid}", name="admin_onshelfbook_delete", methods={"DELETE"})
     */
    public function delete(Request $request, $bid, OnShelfBook $onShelfBook): Response
    {
        if ($this->isCsrfTokenValid('delete'.$onShelfBook->getId(), $request->request->get('_token'))) {
            $entityManager = $this->getDoctrine()->getManager();
            $entityManager->remove($onShelfBook);
            $entityManager->flush();
        }

        return $this->redirectToRoute('admin_onshelfbook_new', ['id'=>$bid]);
    }
}
